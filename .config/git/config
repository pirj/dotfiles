[user]
  useConfigOnly = true
[github]
  user = pirj
[push]
  default = current
  followTags = true
[pull]
  ff = only
  rebase = true
[rebase]
  autostash = true
  autosquash = true
  instructionFormat = %ai %aN %s
[merge]
  tool = diffconflicts
  conflictstyle = diff3
[mergetool]
  prompt = false
  keepBackup = false
[mergetool "diffconflicts"]
  cmd = nvim -c DiffConflictsWithHistory \"$MERGED\" \"$BASE\" \"$LOCAL\" \"$REMOTE\"
  trustExitCode = true
[pager]
  diff = diff-so-fancy | less --tabs=4 -RFX
  show = diff-so-fancy | less --tabs=4 -RFX
[color]
  ui = true
[core]
  whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
  trustctime = false
  commentChar = ";"
  hooksPath = /Users/pirj/.config/git/hooks
[format]
  pretty = %h %ad %<(17)%aN%d %s %N
[log]
  abbrevCommit = true
  date = short
  follow = true
[branch]
  autosetupmerge = true
[alias]
  co = checkout
  s = status --short --branch
  ss = show --stat
  d = diff
  ds = diff --staged
  up = pull
  c = commit
  ca = commit --amend
  p = push
  pf = push --force-with-lease
  a = add
  c1 = clone --depth 1 --single-branch
  f = flow feature
  align = !BASE_BRANCH=${1:-HEAD} && git up origin $BASE_BRANCH && :
  align-epic = !BASE_BRANCH=${1:-HEAD} && git fetch origin $BASE_BRANCH && MERGE_BASE=$(git merge-base origin/$BASE_BRANCH HEAD) && git rebase $MERGE_BASE && :
  edit = "!vim $(git ls-files -m --other --exclude-standard)"
  delete-merged-branches = git branch --merged | grep --invert-match master | xargs git branch -d
  ri = !BASE_BRANCH=${1:-HEAD} && MERGE_BASE=$(git merge-base origin/$BASE_BRANCH HEAD) && git rebase -i $MERGE_BASE && :
  l = !BASE_BRANCH=${1:-HEAD} && MERGE_BASE=$(git merge-base origin/$BASE_BRANCH HEAD) && git log --reverse $MERGE_BASE..HEAD && :
  fixup = commit --amend --no-edit
  wip = commit --no-verify --message=wip
  m = log --format='%h %B' -1
  lf = log origin/head..head --pretty=full
  mt = mergetool
[rerere]
  enabled = 1
[diff]
  algorithm = patience
[interactive]
  singlekey = true
[commit]
  verbose = true
[submodule]
  fetchJobs = 4
  recurse = true
[hub]
  host = emp-sof-github01.emp.internal.com
[absorb]
  maxStack = 20
[init]
  defaultBranch = main
